{"version":3,"file":"static/js/36.b4de77f2.chunk.js","mappings":"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","sources":["pages/DailyTeaser.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  Typography,\n  Button,\n  TextField,\n  CircularProgress,\n  Alert,\n  Paper,\n  Chip,\n  Stack,\n} from '@mui/material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { styled } from '@mui/material/styles';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FadeIn, ScaleIn, SlideIn } from '../components/AnimatedComponents';\nimport { brainTeasers } from '../services/api';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  background: `linear-gradient(135deg, ${theme.palette.background.paper} 0%, ${theme.palette.background.default} 100%)`,\n  borderRadius: theme.shape.borderRadius * 2,\n  padding: theme.spacing(4),\n  position: 'relative',\n  overflow: 'hidden',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: 4,\n    background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n  },\n}));\n\nconst AnswerInput = styled(TextField)(({ theme }) => ({\n  '& .MuiOutlinedInput-root': {\n    borderRadius: theme.shape.borderRadius * 2,\n    transition: 'all 0.2s ease-in-out',\n    '&:hover': {\n      transform: 'translateY(-2px)',\n      boxShadow: theme.shadows[4],\n    },\n  },\n}));\n\nconst DifficultyChip = styled(Chip)(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  fontWeight: 600,\n  '&.easy': {\n    background: theme.palette.success.main,\n    color: theme.palette.success.contrastText,\n  },\n  '&.medium': {\n    background: theme.palette.warning.main,\n    color: theme.palette.warning.contrastText,\n  },\n  '&.hard': {\n    background: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n  },\n}));\n\nconst CountdownTimer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  gap: theme.spacing(2),\n  marginTop: theme.spacing(2),\n}));\n\nconst TimeUnit = styled(Box)(({ theme }) => ({\n  textAlign: 'center',\n  background: 'rgba(255, 255, 255, 0.1)',\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n  minWidth: '60px',\n}));\n\ninterface Teaser {\n  id: string;\n  question: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n  points: number;\n  timeLimit: number;\n  answer?: string;\n}\n\ninterface TeaserResponse {\n  alreadySolved?: boolean;\n  message?: string;\n  nextTeaserDate?: string;\n  previousTeaser?: Teaser;\n  id?: string;\n  question?: string;\n  difficulty?: 'easy' | 'medium' | 'hard';\n  points?: number;\n  timeLimit?: number;\n}\n\ninterface SubmitResponse {\n  success: boolean;\n  points: number;\n  message: string;\n  nextTeaserDate: string;\n}\n\nconst DailyTeaser: React.FC = () => {\n  const { user } = useAuth();\n  const [teaser, setTeaser] = useState<Teaser | null>(null);\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [timeLeft, setTimeLeft] = useState<number | null>(null);\n  const [alreadySolved, setAlreadySolved] = useState(false);\n  const [nextTeaserDate, setNextTeaserDate] = useState<string | null>(null);\n  const [timeUntilNext, setTimeUntilNext] = useState<{\n    hours: number;\n    minutes: number;\n    seconds: number;\n  }>({ hours: 0, minutes: 0, seconds: 0 });\n  const [previousTeaser, setPreviousTeaser] = useState<Teaser | null>(null);\n\n  useEffect(() => {\n    const fetchTeaser = async () => {\n      try {\n        const response = await brainTeasers.getTodayTeaser();\n        const data = response.data as TeaserResponse;\n        \n        console.log('Teaser Response:', data);\n        \n        if (data.alreadySolved) {\n          console.log('Already solved, previous teaser:', data.previousTeaser);\n          setAlreadySolved(true);\n          setNextTeaserDate(data.nextTeaserDate || null);\n          if (data.previousTeaser) {\n            setPreviousTeaser(data.previousTeaser);\n          }\n        } else {\n          setTeaser({\n            id: data.id!,\n            question: data.question!,\n            difficulty: data.difficulty!,\n            points: data.points!,\n            timeLimit: data.timeLimit!,\n          });\n        }\n      } catch (err) {\n        console.error('Error fetching teaser:', err);\n        setError('Failed to fetch today\\'s brain teaser. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTeaser();\n  }, []);\n\n  useEffect(() => {\n    if (teaser && !success) {\n      const timer = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev === null) return teaser.timeLimit;\n          if (prev <= 0) {\n            clearInterval(timer);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n  }, [teaser, success]);\n\n  useEffect(() => {\n    const calculateTimeUntilNext = () => {\n      const now = new Date();\n      const est = new Date(now.toLocaleString('en-US', { timeZone: 'America/New_York' }));\n      const nextTeaser = new Date(est);\n      nextTeaser.setHours(24, 0, 0, 0); // Set to next day at midnight EST\n      \n      const diff = nextTeaser.getTime() - now.getTime();\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n      \n      setTimeUntilNext({ hours, minutes, seconds });\n    };\n\n    calculateTimeUntilNext();\n    const timer = setInterval(calculateTimeUntilNext, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!teaser) return;\n    \n    setError('');\n    setLoading(true);\n\n    try {\n      const response = await brainTeasers.submitSolution({\n        teaserId: teaser.id,\n        solution: answer,\n      });\n      \n      const data = response.data as SubmitResponse;\n      if (data.success) {\n        setSuccess(true);\n        setNextTeaserDate(data.nextTeaserDate);\n      }\n    } catch (err) {\n      setError('Failed to submit answer. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"60vh\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (alreadySolved) {\n    return (\n      <Box>\n        <FadeIn>\n          <Typography variant=\"h4\" gutterBottom>\n            Today's Brain Teaser\n          </Typography>\n        </FadeIn>\n\n        <Paper\n          sx={{\n            p: 4,\n            textAlign: 'center',\n            background: 'rgba(30, 30, 30, 0.6)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255, 255, 255, 0.1)',\n          }}\n        >\n          <Typography variant=\"h5\" gutterBottom>\n            You've Already Solved Today's Teaser!\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            Come back tomorrow for a new challenge.\n          </Typography>\n          {nextTeaserDate && (\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              Next teaser available on: {new Date(nextTeaserDate).toLocaleDateString()}\n            </Typography>\n          )}\n          \n          {previousTeaser && (\n            <Box mt={4}>\n              <Typography variant=\"h6\" gutterBottom>\n                Yesterday's Solution\n              </Typography>\n              <StyledCard>\n                <Stack spacing={2}>\n                  <Box>\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                      Question:\n                    </Typography>\n                    <Typography variant=\"body1\" paragraph>\n                      {previousTeaser.question}\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                      Solution:\n                    </Typography>\n                    <Typography variant=\"body1\" paragraph>\n                      {previousTeaser.answer}\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <DifficultyChip\n                      label={previousTeaser.difficulty}\n                      className={previousTeaser.difficulty}\n                    />\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                      Points: {previousTeaser.points}\n                    </Typography>\n                  </Box>\n                </Stack>\n              </StyledCard>\n            </Box>\n          )}\n\n          <CountdownTimer>\n            <TimeUnit>\n              <Typography variant=\"h6\">{timeUntilNext.hours}</Typography>\n              <Typography variant=\"caption\">Hours</Typography>\n            </TimeUnit>\n            <TimeUnit>\n              <Typography variant=\"h6\">{timeUntilNext.minutes}</Typography>\n              <Typography variant=\"caption\">Minutes</Typography>\n            </TimeUnit>\n            <TimeUnit>\n              <Typography variant=\"h6\">{timeUntilNext.seconds}</Typography>\n              <Typography variant=\"caption\">Seconds</Typography>\n            </TimeUnit>\n          </CountdownTimer>\n        </Paper>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <FadeIn>\n        <Typography variant=\"h4\" gutterBottom>\n          Today's Brain Teaser\n        </Typography>\n      </FadeIn>\n\n      <AnimatePresence mode=\"wait\">\n        {teaser && !success ? (\n          <motion.div\n            key=\"teaser\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n          >\n            <StyledCard>\n              <Stack direction=\"row\" spacing={2} sx={{ mb: 3 }}>\n                <DifficultyChip\n                  label={teaser.difficulty.toUpperCase()}\n                  className={teaser.difficulty}\n                />\n                <Chip\n                  label={`${teaser.points} points`}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                />\n                <Chip\n                  label={`Time: ${formatTime(timeLeft || 0)}`}\n                  color={timeLeft && timeLeft < 60 ? 'error' : 'default'}\n                  variant=\"outlined\"\n                />\n              </Stack>\n\n              <Typography variant=\"h5\" gutterBottom>\n                {teaser.question}\n              </Typography>\n\n              <Box\n                component=\"form\"\n                onSubmit={handleSubmit}\n                sx={{ mt: 4 }}\n              >\n                <AnswerInput\n                  fullWidth\n                  multiline\n                  rows={3}\n                  placeholder=\"Enter your answer...\"\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                  disabled={loading}\n                />\n\n                {error && (\n                  <Alert severity=\"error\" sx={{ mt: 2 }}>\n                    {error}\n                  </Alert>\n                )}\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    disabled={loading || !answer.trim()}\n                  >\n                    {loading ? 'Submitting...' : 'Submit Answer'}\n                  </Button>\n                </Box>\n              </Box>\n            </StyledCard>\n          </motion.div>\n        ) : success && teaser ? (\n          <motion.div\n            key=\"success\"\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n          >\n            <Paper\n              sx={{\n                p: 4,\n                textAlign: 'center',\n                background: `linear-gradient(135deg, ${teaser.difficulty === 'easy' ? '#4caf50' : teaser.difficulty === 'medium' ? '#ff9800' : '#f44336'} 0%, ${teaser.difficulty === 'easy' ? '#81c784' : teaser.difficulty === 'medium' ? '#ffb74d' : '#e57373'} 100%)`,\n                color: 'white',\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom>\n                Congratulations!\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom>\n                You've solved today's brain teaser!\n              </Typography>\n              <Typography variant=\"body1\" paragraph>\n                You earned {teaser.points} points\n              </Typography>\n              {nextTeaserDate && (\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Come back tomorrow for a new challenge!\n                </Typography>\n              )}\n            </Paper>\n          </motion.div>\n        ) : null}\n      </AnimatePresence>\n    </Box>\n  );\n};\n\nexport default DailyTeaser; "],"names":["StyledCard","styled","Card","_ref","theme","background","concat","palette","paper","default","borderRadius","shape","padding","spacing","position","overflow","content","top","left","right","height","primary","main","secondary","AnswerInput","TextField","_ref2","transition","transform","boxShadow","shadows","DifficultyChip","Chip","_ref3","fontWeight","success","color","contrastText","warning","error","CountdownTimer","Box","_ref4","display","justifyContent","gap","marginTop","TimeUnit","_ref5","textAlign","minWidth","DailyTeaser","user","useAuth","teaser","setTeaser","useState","answer","setAnswer","loading","setLoading","setError","setSuccess","timeLeft","setTimeLeft","alreadySolved","setAlreadySolved","nextTeaserDate","setNextTeaserDate","timeUntilNext","setTimeUntilNext","hours","minutes","seconds","previousTeaser","setPreviousTeaser","useEffect","async","data","brainTeasers","getTodayTeaser","console","log","id","question","difficulty","points","timeLimit","err","fetchTeaser","timer","setInterval","prev","clearInterval","calculateTimeUntilNext","now","Date","est","toLocaleString","timeZone","nextTeaser","setHours","diff","getTime","Math","floor","_jsx","alignItems","minHeight","children","CircularProgress","_jsxs","FadeIn","Typography","variant","gutterBottom","Paper","sx","p","backdropFilter","border","paragraph","toLocaleDateString","mt","Stack","label","className","AnimatePresence","mode","motion","div","initial","opacity","y","animate","exit","direction","mb","toUpperCase","remainingSeconds","toString","padStart","formatTime","component","onSubmit","e","preventDefault","submitSolution","teaserId","solution","fullWidth","multiline","rows","placeholder","value","onChange","target","disabled","Alert","severity","Button","type","size","trim","scale"],"sourceRoot":""}