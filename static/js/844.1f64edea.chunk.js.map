{"version":3,"file":"static/js/844.1f64edea.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/icons-material/esm/Pets.js","pages/Maze.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"4.5\",\n  cy: \"9.5\",\n  r: \"2.5\"\n}, \"0\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"9\",\n  cy: \"5.5\",\n  r: \"2.5\"\n}, \"1\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"15\",\n  cy: \"5.5\",\n  r: \"2.5\"\n}, \"2\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"19.5\",\n  cy: \"9.5\",\n  r: \"2.5\"\n}, \"3\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.34 14.86c-.87-1.02-1.6-1.89-2.48-2.91-.46-.54-1.05-1.08-1.75-1.32-.11-.04-.22-.07-.33-.09-.25-.04-.52-.04-.78-.04s-.53 0-.79.05c-.11.02-.22.05-.33.09-.7.24-1.28.78-1.75 1.32-.87 1.02-1.6 1.89-2.48 2.91-1.31 1.31-2.92 2.76-2.62 4.79.29 1.02 1.02 2.03 2.33 2.32.73.15 3.06-.44 5.54-.44h.18c2.48 0 4.81.58 5.54.44 1.31-.29 2.04-1.31 2.33-2.32.31-2.04-1.3-3.49-2.61-4.8\"\n}, \"4\")], 'Pets');","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  Button,\n  CircularProgress,\n  Alert,\n  Chip,\n  Stack,\n  Tooltip,\n} from '@mui/material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { styled } from '@mui/material/styles';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FadeIn, ScaleIn, SlideIn } from '../components/AnimatedComponents';\nimport {\n  EmojiEvents as TrophyIcon,\n  Pets as CreatureIcon,\n  TrendingUp as ProgressIcon,\n} from '@mui/icons-material';\n\nconst MazeContainer = styled(Paper)(({ theme }) => ({\n  background: 'rgba(30, 30, 30, 0.6)',\n  backdropFilter: 'blur(10px)',\n  border: '1px solid rgba(255, 255, 255, 0.1)',\n  borderRadius: theme.shape.borderRadius * 2,\n  padding: theme.spacing(4),\n  position: 'relative',\n  overflow: 'hidden',\n  minHeight: '60vh',\n}));\n\nconst ProgressBar = styled(Box)(({ theme }) => ({\n  width: '100%',\n  height: 8,\n  background: 'rgba(255, 255, 255, 0.1)',\n  borderRadius: 4,\n  overflow: 'hidden',\n  position: 'relative',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    transition: 'width 0.3s ease-in-out',\n  },\n}));\n\nconst Creature = styled(motion.div)(({ theme }) => ({\n  position: 'absolute',\n  width: 40,\n  height: 40,\n  borderRadius: '50%',\n  background: 'rgba(244, 67, 54, 0.2)',\n  backdropFilter: 'blur(4px)',\n  border: '1px solid rgba(244, 67, 54, 0.3)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  '&:hover': {\n    background: 'rgba(244, 67, 54, 0.3)',\n  },\n}));\n\ninterface CommunityStats {\n  totalPoints: number;\n  pointsNeeded: number;\n  level: number;\n  creaturesFound: number;\n  creaturesRemaining: number;\n}\n\nconst Maze: React.FC = () => {\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [stats, setStats] = useState<CommunityStats>({\n    totalPoints: 0,\n    pointsNeeded: 1000,\n    level: 1,\n    creaturesFound: 0,\n    creaturesRemaining: 5,\n  });\n  const [creatures, setCreatures] = useState<Array<{ id: number; x: number; y: number; points: number }>>([]);\n  const [showCreature, setShowCreature] = useState<number | null>(null);\n\n  useEffect(() => {\n    // Simulate fetching community stats and creature positions\n    setTimeout(() => {\n      setStats({\n        totalPoints: 750,\n        pointsNeeded: 1000,\n        level: 1,\n        creaturesFound: 2,\n        creaturesRemaining: 3,\n      });\n      setCreatures([\n        { id: 1, x: 20, y: 30, points: 100 },\n        { id: 2, x: 70, y: 50, points: 150 },\n        { id: 3, x: 40, y: 80, points: 200 },\n      ]);\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  const handleCreatureClick = (creatureId: number) => {\n    setShowCreature(creatureId);\n    // Simulate creature interaction\n    setTimeout(() => {\n      setCreatures(prev => prev.filter(c => c.id !== creatureId));\n      setStats(prev => ({\n        ...prev,\n        creaturesFound: prev.creaturesFound + 1,\n        creaturesRemaining: prev.creaturesRemaining - 1,\n        totalPoints: prev.totalPoints - 100, // Creature consumes points\n      }));\n      setShowCreature(null);\n    }, 2000);\n  };\n\n  const progressPercentage = (stats.totalPoints / stats.pointsNeeded) * 100;\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <FadeIn>\n        <Typography variant=\"h4\" gutterBottom>\n          Community Maze\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n          Solve daily brain teasers to earn points and progress through the maze. Watch out for hidden creatures!\n        </Typography>\n      </FadeIn>\n\n      <MazeContainer>\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 4 }}>\n          <Chip\n            icon={<TrophyIcon />}\n            label={`Level ${stats.level}`}\n            color=\"primary\"\n            variant=\"outlined\"\n          />\n          <Chip\n            icon={<ProgressIcon />}\n            label={`${stats.totalPoints}/${stats.pointsNeeded} Points`}\n            color=\"secondary\"\n            variant=\"outlined\"\n          />\n          <Chip\n            icon={<CreatureIcon />}\n            label={`${stats.creaturesFound} Found, ${stats.creaturesRemaining} Remaining`}\n            color=\"error\"\n            variant=\"outlined\"\n          />\n        </Stack>\n\n        <ProgressBar sx={{ '&::after': { width: `${progressPercentage}%` } }} />\n\n        <Box sx={{ position: 'relative', height: '50vh', mt: 4 }}>\n          {creatures.map((creature) => (\n            <Tooltip\n              key={creature.id}\n              title={`This creature will consume ${creature.points} points!`}\n              arrow\n            >\n              <Creature\n                style={{ left: `${creature.x}%`, top: `${creature.y}%` }}\n                onClick={() => handleCreatureClick(creature.id)}\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n              >\n                <CreatureIcon />\n              </Creature>\n            </Tooltip>\n          ))}\n\n          <AnimatePresence>\n            {showCreature && (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                style={{\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  background: 'rgba(244, 67, 54, 0.9)',\n                  padding: '20px',\n                  borderRadius: '8px',\n                  color: 'white',\n                  textAlign: 'center',\n                }}\n              >\n                <Typography variant=\"h6\">Creature Found!</Typography>\n                <Typography variant=\"body2\">\n                  This creature has consumed 100 points from the community!\n                </Typography>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </Box>\n\n        <Box sx={{ mt: 4, textAlign: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Complete daily brain teasers to earn more points and help the community progress through the maze.\n            Each creature you find will consume points, so be careful!\n          </Typography>\n        </Box>\n      </MazeContainer>\n    </Box>\n  );\n};\n\nexport default Maze; "],"names":["createSvgIcon","_jsx","d","cx","cy","r","MazeContainer","styled","Paper","_ref","theme","background","backdropFilter","border","borderRadius","shape","padding","spacing","position","overflow","minHeight","ProgressBar","Box","_ref2","width","height","content","top","left","concat","palette","primary","main","secondary","transition","Creature","motion","div","_ref3","display","alignItems","justifyContent","cursor","Maze","user","useAuth","loading","setLoading","useState","error","setError","stats","setStats","totalPoints","pointsNeeded","level","creaturesFound","creaturesRemaining","creatures","setCreatures","showCreature","setShowCreature","useEffect","setTimeout","id","x","y","points","progressPercentage","children","CircularProgress","_jsxs","FadeIn","Typography","variant","gutterBottom","color","paragraph","Stack","direction","sx","mb","Chip","icon","TrophyIcon","label","ProgressIcon","CreatureIcon","mt","map","creature","Tooltip","title","arrow","style","onClick","handleCreatureClick","creatureId","prev","filter","c","_objectSpread","whileHover","scale","whileTap","AnimatePresence","initial","opacity","animate","exit","transform","textAlign"],"sourceRoot":""}